{"version":3,"file":"universal-router.js","sources":["../node_modules/path-to-regexp/index.js","../node_modules/universal-router/module.js"],"sourcesContent":["/**\n * Expose `pathToRegexp`.\n */\nexport default pathToRegexp;\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n  var isEndDelimited = tokens.length === 0\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/*! Universal Router | MIT License | https://www.kriasoft.com/universal-router/ */\n\nimport pathToRegexp from 'path-to-regexp';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar cache = new Map();\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(route, pathname, parentKeys, parentParams) {\n  var end = !route.children;\n  var cacheKey = (route.path || '') + \"|\" + end;\n  var regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    var keys = [];\n    regexp = {\n      keys: keys,\n      pattern: pathToRegexp(route.path || '', keys, {\n        end: end\n      })\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  var m = regexp.pattern.exec(pathname);\n\n  if (!m) {\n    return null;\n  }\n\n  var path = m[0];\n  var params = Object.assign({}, parentParams);\n\n  for (var i = 1; i < m.length; i++) {\n    var key = regexp.keys[i - 1];\n    var prop = key.name;\n    var value = m[i];\n\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: !end && path.charAt(path.length - 1) === '/' ? path.substr(1) : path,\n    keys: parentKeys.concat(regexp.keys),\n    params: params\n  };\n}\n\nfunction matchRoute(route, baseUrl, pathname, parentKeys, parentParams) {\n  var match;\n  var childMatches;\n  var childIndex = 0;\n  return {\n    next: function next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {\n          done: true\n        };\n      }\n\n      if (!match) {\n        match = matchPath(route, pathname, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route: route,\n              baseUrl: baseUrl,\n              path: match.path,\n              keys: match.keys,\n              params: match.params\n            }\n          };\n        }\n      }\n\n      if (match && route.children) {\n        while (childIndex < route.children.length) {\n          if (!childMatches) {\n            var childRoute = route.children[childIndex];\n            childRoute.parent = route;\n            childMatches = matchRoute(childRoute, baseUrl + match.path, pathname.substr(match.path.length), match.keys, match.params);\n          }\n\n          var childMatch = childMatches.next(routeToSkip);\n\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {\n        done: true\n      };\n    }\n  };\n}\n\nfunction resolveRoute(context, params) {\n  if (typeof context.route.action === 'function') {\n    return context.route.action(context, params);\n  }\n\n  return undefined;\n}\n\nfunction isChildRoute(parentRoute, childRoute) {\n  var route = childRoute;\n\n  while (route) {\n    route = route.parent;\n\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar UniversalRouter = function () {\n  function UniversalRouter(routes, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!routes || typeof routes !== 'object') {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({\n      router: this\n    }, options.context);\n    this.root = Array.isArray(routes) ? {\n      path: '',\n      children: routes,\n      parent: null\n    } : routes;\n    this.root.parent = null;\n  }\n\n  var _proto = UniversalRouter.prototype;\n\n  _proto.resolve = function resolve(pathnameOrContext) {\n    var _this = this;\n\n    var context = Object.assign({}, this.context, typeof pathnameOrContext === 'string' ? {\n      pathname: pathnameOrContext\n    } : pathnameOrContext);\n    var match = matchRoute(this.root, this.baseUrl, context.pathname.substr(this.baseUrl.length), [], null);\n    var resolve = this.resolveRoute;\n    var matches = null;\n    var nextMatches = null;\n    var currentContext = context;\n\n    function next(resume, parent, prevResult) {\n      if (parent === void 0) {\n        parent = matches.value.route;\n      }\n\n      var routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(null);\n        }\n      }\n\n      if (matches.done) {\n        var error = new Error('Route not found');\n        error.status = 404;\n        return Promise.reject(error);\n      }\n\n      currentContext = Object.assign({}, context, matches.value);\n      return Promise.resolve(resolve(currentContext, matches.value.params)).then(function (result) {\n        if (result !== null && result !== undefined) {\n          return result;\n        }\n\n        return next(resume, parent, result);\n      });\n    }\n\n    context.next = next;\n    return Promise.resolve().then(function () {\n      return next(true, _this.root);\n    }).catch(function (error) {\n      if (_this.errorHandler) {\n        return _this.errorHandler(error, currentContext);\n      }\n\n      throw error;\n    });\n  };\n\n  return UniversalRouter;\n}();\n\nUniversalRouter.pathToRegexp = pathToRegexp;\n\nexport default UniversalRouter;\n//# sourceMappingURL=module.js.map\n"],"names":[],"mappings":"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"}